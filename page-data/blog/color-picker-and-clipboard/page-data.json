{"componentChunkName":"component---src-templates-blog-detail-js","path":"/blog/color-picker-and-clipboard","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"/blog/color-picker-and-clipboard\",\n  \"title\": \"颜色选择器&复制到剪贴板\",\n  \"date\": \"2023-03-29 22:01:48\",\n  \"brief\": \"工作中遇到的颜色选择器功能，ant design目前的版本中还没有单独封装为组件，那就自己动手吧，另外这次还了解了选中文本复制到剪贴板的小功能。\",\n  \"tag\": \"react\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u989C\\u8272\\u9009\\u62E9\\u5668\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-color\"), \" \\u5B9E\\u73B0\\u3002\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5B98\\u7F51\\u6587\\u6863\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://casesandberg.github.io/react-color/\"\n  }, \"http://casesandberg.github.io/react-color/\"), \" \")), mdx(\"h3\", null, \"\\u57FA\\u672C\\u4F7F\\u7528\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { Suspense, useState } from 'react';\\nimport type { FC } from 'react';\\nimport { ChromePicker } from 'react-color';\\n\\nconst Page: FC = () => {\\n  const [color, setColor] = useState<string>('#CB82F0');\\n\\n  return (\\n    <div>\\n      <Popover\\n        trigger=\\\"click\\\"\\n        content={\\n          <ChromePicker\\n            color={warningColor}\\n            onChangeComplete={(color) => setWarningColor(color.hex)}\\n          />\\n        }\\n        className={styles.colorPicker}\\n        overlayClassName={styles.colorPickerPanel}\\n      >\\n        <div\\n          className={styles.pickerView} \\n          style={{ backgroundColor: color }}\\n        >\\n        </div>\\n        <a className={styles.pickerBtn}>\\u4FEE\\u6539</a>\\n      </Popover>\\n    </div>\\n  );\\n};\\n\\nexport default Page;\\n\")), mdx(\"h3\", null, \"\\u6548\\u679C\\u9884\\u89C8\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/2023-03-29/color-picker-3.png\",\n    \"alt\": \"color-picker-3\"\n  })), mdx(\"h3\", null, \"\\u8865\\u5145\\u8BF4\\u660E\"), mdx(\"p\", null, \"\\u5185\\u7F6E\\u4E86\\u591A\\u79CD\\u98CE\\u683C\\u7684\\u989C\\u8272\\u9009\\u62E9\\u5668\\u3002\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/2023-03-29/color-picker-1.png\",\n    \"alt\": \"color-picker-1\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/2023-03-29/color-picker-2.png\",\n    \"alt\": \"color-picker-2\"\n  })), mdx(\"h2\", null, \"\\u590D\\u5236\\u5230\\u526A\\u8D34\\u677F\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-copy-to-clipboard\"), \" \\u5B9E\\u73B0\\u3002\")), mdx(\"h3\", null, \"\\u57FA\\u672C\\u4F7F\\u7528\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import React, { Suspense, useState } from 'react';\\nimport type { FC } from 'react';\\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\\nimport { message, Tooltip } from 'antd';\\n\\nconst Page: FC = () => {\\n  const [caseNo, setCaseNo] = useState<string>('\\uFF082023\\uFF09\\u676D\\u68501737\\u4EBA\\u8C03\\uFF08\\u5E02\\uFF09\\u5B57\\u7B2C38\\u53F7');\\n\\n  return (\\n    <div>\\n      <Tooltip title=\\\"\\u70B9\\u51FB\\u6848\\u53F7\\u5FEB\\u901F\\u590D\\u5236\\\">\\n        <CopyToClipboard text={caseNo} onCopy={() => message.success('\\u6848\\u53F7\\u5DF2\\u590D\\u5236')}>\\n          <span style={{ fontSize: 18, fontWeight: 600 }}>\\n            \\u6848\\u53F7\\uFF1A{caseNo}\\n          </span>\\n        </CopyToClipboard>\\n      </Tooltip>\\n    </div>\\n  );\\n};\\n\\nexport default Page;\\n\")), mdx(\"p\", null, \"\\u8FD9\\u6837\\u5C31\\u5B9E\\u73B0\\u4E86\\u901A\\u8FC7\\u4EE3\\u7801\\u5C06\\u5185\\u5BB9\\u6DFB\\u52A0\\u5230\\u526A\\u8D34\\u677F\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"2023-03-29 22:01:48","title":"颜色选择器&复制到剪贴板","slug":"/blog/color-picker-and-clipboard"}}},"pageContext":{"slug":"/blog/color-picker-and-clipboard","next":"/blog/websocket-tool-and-antd-transition","previous":"/blog/dnd-kit-base-usage"}},"staticQueryHashes":[]}